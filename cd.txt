1 a

Blink the pair of Onboard LEDs (LED1 & LED3, LED2 & LED4) together alternatively with the minimal time Difference.


#include "mbed.h"

DigitalOut led1(LED1);
DigitalOut led2(LED2);
DigitalOut led3(LED3);
DigitalOut led4(LED4);

int main() {
    while (1) {
        led1 = 1; led3 = 1;
        wait(0.3);
        led1 = 0; led3 = 0;
        
        led2 = 1; led4 = 1;
        wait(0.3);
        led2 = 0; led4 = 0;
    }
}



- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

1 b

Blink the onboard LED with the following format with the minimal time difference, LED1, LED2, LED3, LED4, LED3, LED2, LED1 infinitely.


#include "mbed.h"

BusOut myleds(LED1, LED2, LED3, LED4);

int main() {
   int arr[] = {1, 2, 4, 8, 4, 2};
   while(1){
       for(int  i = 0; i < sizeof(arr)/sizeof(arr[0]); i++){
            myleds = arr[i];
            wait(0.25);
       }
   }
}





- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

1 c 

#include "mbed.h"

BusOut myleds(LED1, LED2, LED3, LED4);

int main() {
    int num1 = 0, num2 = 1, sum = 0;
    myleds = num1; wait(0.5);   // for first 2 numbers
    myleds = num2; wait(0.5);
    while(1) {
        while(sum <= 15) {
            sum = num1 + num2;
            myleds = sum; wait(1);
            num1 = num2;
            num2 = sum;
        }
        sum = 0;
        num1 = 0; num2 = 1;	// re-initialize for next repeat cycle
    }
}


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


2 a

#include "mbed.h"

InterruptIn button(p5);
BusOut Bits(LED1,LED2,LED3,LED4); //LED outputs for counter
char val = 0;
int flag = 0; // Decade - 0, Hex - 1

void hex_upcount() {
    if(val > 15)
        val = 0;
}

void decade_upcount() {
    if(val > 9)
        val = 0;
}

void up_count_reset(){
    if(flag==1)
        hex_upcount();
    else
        decade_upcount();
}

void set_hex(){
    flag = 1;
    printf("Setting HEX\n");
}

void set_decade(){
    flag = 0;
    printf("Setting DECADE\n");
}


int main() {
    button.rise(&set_hex);  
    button.fall(&set_decade);  
    while (1) {
        val++;
        up_count_reset();
        Bits = val;
        printf("Value: %d\n", val);
        wait(0.2);
    }
}



- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


2 b

#include "mbed.h"

BusOut Bits(LED1,LED2,LED3,LED4);
Ticker ticky;
Timeout time_out;

char val;
void hex_counter() {
    val++;
    if(val > 15)
        val = 0;
    Bits = val;
    printf("Value: %d\n", val);
    wait(1);
}

void reset_vals(){
    val = 0; Bits = 0;
}


int main() {
    val = 0;
    ticky.attach(&hex_counter, 1);
    time_out.attach(&reset_vals, 30.0);
    while (1) {
        wait_ms(1);
    }
}



- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 




